Websocket server for monitoring started on port 8442
HTTPS server for SEB Server started on port 8443
Socket server for SEB Server started on port 8443
[ { domain: null,
    _events: { close: [Function] },
    _maxListeners: undefined,
    _socket: 
     { _connecting: false,
       _hadError: false,
       _handle: [Object],
       _host: null,
       _readableState: [Object],
       readable: true,
       domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _writableState: [Object],
       writable: true,
       allowHalfOpen: false,
       destroyed: false,
       bytesRead: 554,
       _bytesDispatched: 175,
       _pendingData: null,
       _pendingEncoding: '',
       _tlsOptions: [Object],
       _secureEstablished: true,
       _securePending: false,
       _newSessionPending: false,
       _controlReleased: true,
       _SNICallback: null,
       ssl: [Object],
       servername: 'localhost',
       npnProtocol: 'http/1.1',
       authorized: true,
       authorizationError: null,
       encrypted: true,
       server: [Object],
       _requestCert: true,
       _rejectUnauthorized: false,
       _idleTimeout: -1,
       _idleNext: null,
       _idlePrev: null,
       _idleStart: 72152892,
       parser: null,
       _paused: false,
       read: [Function],
       _consuming: true },
    _ultron: { id: 0, ee: [Object] },
    _closeReceived: false,
    bytesReceived: 0,
    readyState: 1,
    supports: { binary: true },
    extensions: { 'permessage-deflate': [Object] },
    protocol: undefined,
    protocolVersion: 13,
    upgradeReq: 
     { _readableState: [Object],
       readable: true,
       domain: null,
       _events: {},
       _maxListeners: undefined,
       socket: [Object],
       connection: [Object],
       httpVersionMajor: 1,
       httpVersionMinor: 1,
       httpVersion: '1.1',
       complete: true,
       headers: [Object],
       rawHeaders: [Object],
       trailers: {},
       rawTrailers: [],
       _pendings: [],
       _pendingIndex: 0,
       upgrade: true,
       url: '/',
       method: 'GET',
       statusCode: null,
       statusMessage: null,
       client: [Object],
       _consuming: false,
       _dumped: false,
       parser: null },
    _isServer: true,
    _receiver: 
     { fragmentedBufferPool: [Object],
       unfragmentedBufferPool: [Object],
       extensions: [Object],
       state: [Object],
       overflow: [],
       headerBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00>,
       expectOffset: 0,
       expectBuffer: <Buffer 00 00>,
       expectHandler: [Function],
       currentMessage: [],
       messageHandlers: [],
       dead: false,
       processing: false,
       onerror: [Function: onerror],
       ontext: [Function: ontext],
       onbinary: [Function: onbinary],
       onclose: [Function: onclose],
       onping: [Function: onping],
       onpong: [Function: onpong] },
    _sender: 
     { domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _socket: [Object],
       extensions: [Object],
       firstFragment: true,
       compress: false,
       messageHandlers: [],
       processing: false } } ]
seb client connected
monitor: seb connected
clients: 1
[ { domain: null,
    _events: 
     { close: [Object],
       open: [Object],
       message: [Object],
       error: [Object] },
    _maxListeners: undefined,
    _socket: 
     { _connecting: false,
       _hadError: false,
       _handle: [Object],
       _host: null,
       _readableState: [Object],
       readable: true,
       domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _writableState: [Object],
       writable: true,
       allowHalfOpen: false,
       destroyed: false,
       bytesRead: 554,
       _bytesDispatched: 190,
       _pendingData: null,
       _pendingEncoding: '',
       _tlsOptions: [Object],
       _secureEstablished: true,
       _securePending: false,
       _newSessionPending: false,
       _controlReleased: true,
       _SNICallback: null,
       ssl: [Object],
       servername: 'localhost',
       npnProtocol: 'http/1.1',
       authorized: true,
       authorizationError: null,
       encrypted: true,
       server: [Object],
       _requestCert: true,
       _rejectUnauthorized: false,
       _idleTimeout: -1,
       _idleNext: null,
       _idlePrev: null,
       _idleStart: 72152892,
       parser: null,
       _paused: false,
       read: [Function],
       _consuming: true },
    _ultron: { id: 0, ee: [Object] },
    _closeReceived: false,
    bytesReceived: 0,
    readyState: 1,
    supports: { binary: true },
    extensions: { 'permessage-deflate': [Object] },
    protocol: undefined,
    protocolVersion: 13,
    upgradeReq: 
     { _readableState: [Object],
       readable: true,
       domain: null,
       _events: {},
       _maxListeners: undefined,
       socket: [Object],
       connection: [Object],
       httpVersionMajor: 1,
       httpVersionMinor: 1,
       httpVersion: '1.1',
       complete: true,
       headers: [Object],
       rawHeaders: [Object],
       trailers: {},
       rawTrailers: [],
       _pendings: [],
       _pendingIndex: 0,
       upgrade: true,
       url: '/',
       method: 'GET',
       statusCode: null,
       statusMessage: null,
       client: [Object],
       _consuming: false,
       _dumped: false,
       parser: null },
    _isServer: true,
    _receiver: 
     { fragmentedBufferPool: [Object],
       unfragmentedBufferPool: [Object],
       extensions: [Object],
       state: [Object],
       overflow: [],
       headerBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00>,
       expectOffset: 0,
       expectBuffer: <Buffer 00 00>,
       expectHandler: [Function],
       currentMessage: [],
       messageHandlers: [],
       dead: false,
       processing: false,
       onerror: [Function: onerror],
       ontext: [Function: ontext],
       onbinary: [Function: onbinary],
       onclose: [Function: onclose],
       onping: [Function: onping],
       onpong: [Function: onpong] },
    _sender: 
     { domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _socket: [Object],
       extensions: [Object],
       firstFragment: true,
       compress: true,
       messageHandlers: [],
       processing: false } },
  { domain: null,
    _events: { close: [Function] },
    _maxListeners: undefined,
    _socket: 
     { _connecting: false,
       _hadError: false,
       _handle: [Object],
       _host: null,
       _readableState: [Object],
       readable: true,
       domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _writableState: [Object],
       writable: true,
       allowHalfOpen: false,
       destroyed: false,
       bytesRead: 554,
       _bytesDispatched: 175,
       _pendingData: null,
       _pendingEncoding: '',
       _tlsOptions: [Object],
       _secureEstablished: true,
       _securePending: false,
       _newSessionPending: false,
       _controlReleased: true,
       _SNICallback: null,
       ssl: [Object],
       servername: 'localhost',
       npnProtocol: 'http/1.1',
       authorized: true,
       authorizationError: null,
       encrypted: true,
       server: [Object],
       _requestCert: true,
       _rejectUnauthorized: false,
       _idleTimeout: -1,
       _idleNext: null,
       _idlePrev: null,
       _idleStart: 72152923,
       parser: null,
       _paused: false,
       read: [Function],
       _consuming: true },
    _ultron: { id: 1, ee: [Object] },
    _closeReceived: false,
    bytesReceived: 0,
    readyState: 1,
    supports: { binary: true },
    extensions: { 'permessage-deflate': [Object] },
    protocol: undefined,
    protocolVersion: 13,
    upgradeReq: 
     { _readableState: [Object],
       readable: true,
       domain: null,
       _events: {},
       _maxListeners: undefined,
       socket: [Object],
       connection: [Object],
       httpVersionMajor: 1,
       httpVersionMinor: 1,
       httpVersion: '1.1',
       complete: true,
       headers: [Object],
       rawHeaders: [Object],
       trailers: {},
       rawTrailers: [],
       _pendings: [],
       _pendingIndex: 0,
       upgrade: true,
       url: '/',
       method: 'GET',
       statusCode: null,
       statusMessage: null,
       client: [Object],
       _consuming: false,
       _dumped: false,
       parser: null },
    _isServer: true,
    _receiver: 
     { fragmentedBufferPool: [Object],
       unfragmentedBufferPool: [Object],
       extensions: [Object],
       state: [Object],
       overflow: [],
       headerBuffer: <Buffer 01 00 00 00 00 00 00 00 ff ff>,
       expectOffset: 0,
       expectBuffer: <Buffer 01 00>,
       expectHandler: [Function],
       currentMessage: [],
       messageHandlers: [],
       dead: false,
       processing: false,
       onerror: [Function: onerror],
       ontext: [Function: ontext],
       onbinary: [Function: onbinary],
       onclose: [Function: onclose],
       onping: [Function: onping],
       onpong: [Function: onpong] },
    _sender: 
     { domain: null,
       _events: [Object],
       _maxListeners: undefined,
       _socket: [Object],
       extensions: [Object],
       firstFragment: true,
       compress: false,
       messageHandlers: [],
       processing: false } } ]
seb client connected
monitor: seb connected
clients: 2
monitor: admin connected
